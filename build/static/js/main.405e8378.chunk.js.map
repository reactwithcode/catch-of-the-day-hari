{"version":3,"sources":["components/Header.jsx","helpers.js","components/Order.jsx","components/AddFishForm.jsx","components/EditFishForm.jsx","components/Login.jsx","base.js","components/Inventory.jsx","sample-fishes.js","components/Fish.jsx","components/App.jsx","components/StorePicker.jsx","components/NotFound.jsx","components/Router.jsx","index.js"],"names":["Header","tagline","className","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","Order","order","fishes","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","key","fish","count","status","price","component","map","isAvailable","transitionOptions","classNames","timeout","enter","exit","name","onClick","AddFishForm","addFish","nameRef","useRef","priceRef","statusRef","descRef","imageRef","onSubmit","event","preventDefault","current","value","parseFloat","desc","image","currentTarget","reset","ref","type","placeholder","EditFishForm","index","updateFish","deleteFish","handleChange","updatedFish","target","onChange","Login","props","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","base","Rebase","createClass","database","Inventory","loadSampleFishes","storeId","useState","uid","setUid","owner","setOwner","authHandler","authData","fetch","store","console","log","post","data","user","handleLogout","auth","signOut","logout","useEffect","onAuthStateChanged","provider","authProvider","signInWithPopup","then","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","addToOrder","src","alt","disabled","App","setFishes","JSON","parse","localStorage","getItem","setOrder","useParams","localStorageRef","on","snapshot","val","update","removeBinding","setItem","stringify","orderCopy","Date","now","fishesCopy","SampleFishes","StorePicker","myInput","navigate","useNavigate","storeName","required","defaultValue","NotFound","Router","exact","path","element","render","document","querySelector"],"mappings":"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","file":"static/js/main.405e8378.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ tagline }) => {\n\treturn (\n\t\t<header className=\"top\">\n\t\t\t<h1>\n\t\t\t\tCatch\n\t\t\t\t<span className=\"ofThe\">\n\t\t\t\t\t<span className=\"of\">of</span>\n\t\t\t\t\t<span className=\"the\">the</span>\n\t\t\t\t</span>\n\t\t\t\tDay\n\t\t\t</h1>\n\t\t\t<h3 className=\"tagline\">\n\t\t\t\t<span>{tagline}</span>\n\t\t\t</h3>\n\t\t</header>\n\t);\n};\n\nHeader.propTypes = {\n\ttagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nconst Order = ({ order, fishes, removeFromOrder }) => {\n\tconst orderIds = Object.keys(order);\n\tconst total = orderIds.reduce((prevTotal, key) => {\n\t\tconst fish = fishes[key];\n\t\tconst count = order[key];\n\t\tconst isAvailable = fish && fish.status === 'available';\n\t\tif (isAvailable) {\n\t\t\treturn prevTotal + count * fish.price;\n\t\t}\n\t\treturn prevTotal;\n\t}, 0);\n\n\tconst renderOrder = (key) => {\n\t\tconst fish = fishes[key];\n\t\tconst count = order[key];\n\t\tconst isAvailable = fish.status === 'available';\n\t\tconst transitionOptions = {\n\t\t\tclassNames: 'order',\n\t\t\tkey,\n\t\t\ttimeout: { enter: 500, exit: 500 },\n\t\t};\n\t\t// Make sure the fish is loaded before we continue\n\t\tif (!fish) return null;\n\n\t\tif (!isAvailable) {\n\t\t\treturn (\n\t\t\t\t<CSSTransition {...transitionOptions}>\n\t\t\t\t\t<li key={key}>\n\t\t\t\t\t\tSorry {fish ? fish.name : 'fish'} is no longer available\n\t\t\t\t\t</li>\n\t\t\t\t</CSSTransition>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<CSSTransition {...transitionOptions}>\n\t\t\t\t<li key={key}>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<TransitionGroup component=\"span\" className=\"count\">\n\t\t\t\t\t\t\t<CSSTransition\n\t\t\t\t\t\t\t\tclassNames=\"count\"\n\t\t\t\t\t\t\t\tkey={count}\n\t\t\t\t\t\t\t\ttimeout={{ enter: 500, exit: 500 }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span>{count}</span>\n\t\t\t\t\t\t\t</CSSTransition>\n\t\t\t\t\t\t</TransitionGroup>\n\t\t\t\t\t\tlbs {fish.name}\n\t\t\t\t\t\t{formatPrice(count * fish.price)}\n\t\t\t\t\t\t<button onClick={() => removeFromOrder(key)}>&times;</button>\n\t\t\t\t\t</span>\n\t\t\t\t</li>\n\t\t\t</CSSTransition>\n\t\t);\n\t};\n\treturn (\n\t\t<div className=\"order-wrap\">\n\t\t\t<h2>Order</h2>\n\t\t\t<TransitionGroup component=\"ul\" className=\"order\">\n\t\t\t\t{orderIds.map(renderOrder)}\n\t\t\t</TransitionGroup>\n\t\t\t<div className=\"total\">\n\t\t\t\tTotal:\n\t\t\t\t<strong>{formatPrice(total)}</strong>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nOrder.propTypes = {\n\torder: PropTypes.object,\n\tfishes: PropTypes.object,\n\tremoveFromOrder: PropTypes.func,\n};\n\nexport default Order;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddFishForm = ({ addFish }) => {\n\tconst nameRef = useRef(null);\n\tconst priceRef = useRef(null);\n\tconst statusRef = useRef(null);\n\tconst descRef = useRef(null);\n\tconst imageRef = useRef(null);\n\n\tconst createFish = (event) => {\n\t\t// 1. Stop the form from submitting\n\t\tevent.preventDefault();\n\t\tconst fish = {\n\t\t\tname: nameRef.current.value,\n\t\t\tprice: parseFloat(priceRef.current.value),\n\t\t\tstatus: statusRef.current.value,\n\t\t\tdesc: descRef.current.value,\n\t\t\timage: imageRef.current.value,\n\t\t};\n\t\taddFish(fish);\n\t\t// refresh the form\n\t\tevent.currentTarget.reset();\n\t};\n\treturn (\n\t\t<form className=\"fish-edit\" onSubmit={createFish}>\n\t\t\t<input name=\"name\" ref={nameRef} type=\"text\" placeholder=\"Name\" />\n\t\t\t<input name=\"price\" ref={priceRef} type=\"text\" placeholder=\"Price\" />\n\t\t\t<select name=\"status\" ref={statusRef}>\n\t\t\t\t<option value=\"available\">Fresh!</option>\n\t\t\t\t<option value=\"unavailable\">Sold Out!</option>\n\t\t\t</select>\n\t\t\t<textarea name=\"desc\" ref={descRef} placeholder=\"Desc\" />\n\t\t\t<input name=\"image\" ref={imageRef} type=\"text\" placeholder=\"Image\" />\n\t\t\t<button type=\"submit\">+ Add Fish</button>\n\t\t</form>\n\t);\n};\n\nAddFishForm.propTypes = {\n\taddFish: PropTypes.func,\n};\n\nexport default AddFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst EditFishForm = ({ fish, index, updateFish, deleteFish }) => {\n\tconst handleChange = (event) => {\n\t\t// update that fish\n\t\t// 1. Take a copy of the current fish\n\t\tconst updatedFish = {\n\t\t\t...fish,\n\t\t\t[event.target.name]: event.target.value,\n\t\t};\n\t\tupdateFish(index, updatedFish);\n\t};\n\treturn (\n\t\t<div className=\"fish-edit\">\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"name\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={fish?.name}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"price\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={fish?.price}\n\t\t\t/>\n\t\t\t<select\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"status\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={fish?.status}\n\t\t\t>\n\t\t\t\t<option value=\"available\">Fresh!</option>\n\t\t\t\t<option value=\"unavailable\">Sold Out!</option>\n\t\t\t</select>\n\t\t\t<textarea name=\"desc\" onChange={handleChange} value={fish.desc} />\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"image\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={fish?.image}\n\t\t\t/>\n\t\t\t<button onClick={() => deleteFish(index)}>Remove Fish</button>\n\t\t</div>\n\t);\n};\n\nEditFishForm.propTypes = {\n\tfish: PropTypes.shape({\n\t\timage: PropTypes.string,\n\t\tname: PropTypes.string,\n\t\tdesc: PropTypes.string,\n\t\tstatus: PropTypes.string,\n\t\tprice: PropTypes.number,\n\t}),\n\tindex: PropTypes.string,\n\tupdateFish: PropTypes.func,\n\tdeleteFish: PropTypes.func,\n};\n\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => {\n\treturn (\n\t\t<nav className=\"login\">\n\t\t\t<h2>Inventory Login</h2>\n\t\t\t<p>Sign in to manage your store's inventory.</p>\n\t\t\t<button className=\"github\" onClick={() => props.authenticate('Github')}>\n\t\t\t\tLogin In with Github\n\t\t\t</button>\n\t\t\t<button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>\n\t\t\t\tLogin In with Twitter\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName=\"facebook\"\n\t\t\t\tonClick={() => props.authenticate('Facebook')}\n\t\t\t>\n\t\t\t\tLogin In with Facebook\n\t\t\t</button>\n\t\t</nav>\n\t);\n};\n\nLogin.propTypes = {\n\tauthenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n\tapiKey: 'AIzaSyC2EGEcGt8CgXgnYQ1S9uIntX1N_lBF57A',\n\tauthDomain: 'catch-of-the-day-hari.firebaseapp.com',\n\tdatabaseURL: 'https://catch-of-the-day-hari-default-rtdb.firebaseio.com',\n\tprojectId: 'catch-of-the-day-hari',\n\tstorageBucket: 'catch-of-the-day-hari.appspot.com',\n\tmessagingSenderId: '490272879357',\n\tappId: '1:490272879357:web:6309478f22cd617fac8494',\n\tmeasurementId: 'G-RZ7E1MVVEX',\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This si a named export\nexport { firebaseApp };\n\n// This is a default export\nexport default base;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nconst Inventory = ({\n\taddFish,\n\tloadSampleFishes,\n\tfishes,\n\tupdateFish,\n\tdeleteFish,\n\tstoreId,\n}) => {\n\tconst [uid, setUid] = useState(null);\n\tconst [owner, setOwner] = useState(null);\n\n\tconst authHandler = async (authData) => {\n\t\t// handle user information / authData\n\t\t// 1. Look up the current store in the Firebase database.\n\t\tconst store = await base.fetch(storeId, {});\n\t\tconsole.log(store);\n\t\t// 2. Claim it if there is no user\n\t\tif (!store.owner) {\n\t\t\t// save it as our own\n\t\t\tawait base.post(`${storeId}/owner`, {\n\t\t\t\tdata: authData.user.uid,\n\t\t\t});\n\t\t}\n\n\t\t// 3. Set the store of the inventory component to reflect the current user\n\t\tsetUid(authData.user.uid);\n\t\tsetOwner(store.owner || authData.user.uid);\n\n\t\tconsole.log(authData);\n\t};\n\tconst authenticate = (provider) => {\n\t\t// 1. Get auth provider\n\t\tconst authProvider = new firebase.auth[`${provider}AuthProvider`]();\n\t\t// 2. Sign in with auth provider\n\t\tfirebaseApp.auth().signInWithPopup(authProvider).then(authHandler);\n\t};\n\n\tconst handleLogout = async () => {\n\t\tconsole.log('Logging out!');\n\t\tawait firebase.auth().signOut();\n\t\tsetUid(null);\n\t};\n\n\tconst logout = <button onClick={handleLogout}>Log Out</button>;\n\n\t// Check if user is logged in when reloading the page\n\tuseEffect(() => {\n\t\tfirebase.auth().onAuthStateChanged((user) => {\n\t\t\tif (user) {\n\t\t\t\tauthHandler({ user }, storeId);\n\t\t\t}\n\t\t});\n\t}, []);\n\n\t// 1. Check if they are logged in\n\tif (!uid) {\n\t\treturn <Login authenticate={authenticate} />;\n\t}\n\n\t// 2. Check if they are not the owner of the store\n\tif (uid !== owner) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Sorry you are not the owner!</p>\n\t\t\t\t{logout}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// 3. They must the owner, just render the inventory\n\treturn (\n\t\t<div className=\"inventory\">\n\t\t\t<h2>Inventory</h2>\n\t\t\t{logout}\n\t\t\t{Object.keys(fishes).map((key) => (\n\t\t\t\t<EditFishForm\n\t\t\t\t\tkey={key}\n\t\t\t\t\tfish={fishes[key]}\n\t\t\t\t\tindex={key}\n\t\t\t\t\tupdateFish={updateFish}\n\t\t\t\t\tdeleteFish={deleteFish}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<AddFishForm addFish={addFish} />\n\t\t\t<button onClick={loadSampleFishes}>Load Sample Fishes</button>\n\t\t</div>\n\t);\n};\n\nInventory.propTypes = {\n\taddFish: PropTypes.func,\n\tloadSampleFishes: PropTypes.func,\n\tfishes: PropTypes.object,\n\tupdateFish: PropTypes.func,\n\tdeleteFish: PropTypes.func,\n};\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nconst Fish = ({ details, addToOrder, index }) => {\n\tconst { image, name, price, desc, status } = details;\n\tconst isAvailable = status === 'available';\n\n\tconst handleClick = () => {\n\t\taddToOrder(index);\n\t};\n\n\treturn (\n\t\t<li className=\"menu-fish\">\n\t\t\t<img src={image} alt={name} />\n\t\t\t<h3 className=\"fish-name\">\n\t\t\t\t{name}\n\t\t\t\t<span className=\"price\">{formatPrice(price)}</span>\n\t\t\t</h3>\n\t\t\t<p>{desc}</p>\n\t\t\t<button disabled={!isAvailable} onClick={handleClick}>\n\t\t\t\t{isAvailable ? 'Add to Cart' : 'Sold Out!'}\n\t\t\t</button>\n\t\t</li>\n\t);\n};\n\nFish.propTypes = {\n\tdetails: PropTypes.shape({\n\t\timage: PropTypes.string,\n\t\tname: PropTypes.string,\n\t\tdesc: PropTypes.string,\n\t\tstatus: PropTypes.string,\n\t\tprice: PropTypes.number,\n\t}),\n\tindex: PropTypes.string,\n\taddToOrder: PropTypes.func,\n};\n\nexport default Fish;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport SampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\nimport firebase from 'firebase';\nimport { useParams } from 'react-router-dom';\n\nconst App = () => {\n\tconst [fishes, setFishes] = useState({});\n\tconst [order, setOrder] = useState(\n\t\tJSON.parse(localStorage.getItem(storeId)) || {}\n\t);\n\n\tconst { storeId } = useParams();\n\n\tuseEffect(() => {\n\t\t// first reinstate our localstorage\n\t\tconst localStorageRef = localStorage.getItem(storeId);\n\t\tif (localStorageRef) {\n\t\t\tsetOrder(JSON.parse(localStorageRef));\n\t\t}\n\n\t\tfirebase\n\t\t\t.database()\n\t\t\t.ref(`${storeId}/fishes`)\n\t\t\t.on('value', (snapshot) => {\n\t\t\t\tif (snapshot.val()) setFishes(snapshot.val());\n\t\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst ref = firebase.database().ref(`${storeId}/fishes`).update(fishes);\n\t\treturn () => {\n\t\t\t// to remove previous data listener\n\t\t\tbase.removeBinding(ref);\n\t\t};\n\t}, [fishes]);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(storeId, JSON.stringify(order));\n\t}, [order]);\n\n\tconst addFish = (fish) => {\n\t\t// 1. Take a copy of the existing fishes\n\t\tconst fishes = { ...fishes };\n\t\t// 2. Add our new fish to that fishes variable\n\t\tfishes[`fish${Date.now()}`] = fish;\n\t\t// 3. Set the new fishes object to state\n\t\tsetFishes(fishes);\n\t};\n\n\tconst updateFish = (key, updatedFish) => {\n\t\t// 1. Take a copy of the current state\n\t\tconst fishes = { ...fishes };\n\t\t// 2. Update that state\n\t\tfishes[key] = updatedFish;\n\t\t// 3. Set that to state\n\t\tsetFishes(fishes);\n\t};\n\n\tconst deleteFish = (key) => {\n\t\t// 1. take a copy of state\n\t\tconst fishesCopy = { ...fishes };\n\t\t// 2. update the state\n\t\tfishesCopy[key] = {};\n\t\t// 3. update state\n\t\tsetFishes(fishesCopy);\n\t};\n\n\tconst loadSampleFishes = () => {\n\t\tsetFishes(SampleFishes);\n\t};\n\n\tconst addToOrder = (key) => {\n\t\t// 1. Take a copy of state\n\t\tconst orderCopy = { ...order };\n\t\t// 2. Either add to the order, or update the number in our order\n\t\torderCopy[key] = orderCopy[key] + 1 || 1;\n\t\t// 3. Call setState to update our state object\n\t\tsetOrder(orderCopy);\n\t};\n\n\tconst removeFromOrder = (key) => {\n\t\t// 1. Take a copy of state\n\t\tconst orderCopy = { ...order };\n\t\t// 2. remove that item from order\n\t\tdelete orderCopy[key];\n\t\t// 3. Call setState to update our state object\n\t\tsetOrder(orderCopy);\n\t};\n\n\treturn (\n\t\t<div className=\"catch-of-the-day\">\n\t\t\t<div className=\"menu\">\n\t\t\t\t<Header tagline=\"Fresh Seafood Market\" />\n\t\t\t\t<ul className=\"fishes\">\n\t\t\t\t\t{Object.keys(fishes).map((key) => (\n\t\t\t\t\t\t<Fish\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\tindex={key}\n\t\t\t\t\t\t\tdetails={fishes[key]}\n\t\t\t\t\t\t\taddToOrder={addToOrder}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<Order fishes={fishes} order={order} removeFromOrder={removeFromOrder} />\n\t\t\t<Inventory\n\t\t\t\tfishes={fishes}\n\t\t\t\taddFish={addFish}\n\t\t\t\tupdateFish={updateFish}\n\t\t\t\tdeleteFish={deleteFish}\n\t\t\t\tloadSampleFishes={loadSampleFishes}\n\t\t\t\tstoreId={storeId}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React, { useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getFunName } from '../helpers';\n\nconst StorePicker = () => {\n\tconst myInput = useRef(null);\n\n\tconst navigate = useNavigate();\n\n\tconst goToStore = (event) => {\n\t\t// 1. Stop the form from submitting\n\t\tevent.preventDefault();\n\t\t// 2. get the text from that input\n\t\tconst storeName = myInput.current.value;\n\t\t// 3. Change the page to /store/whatever-they-entered\n\t\tnavigate(`/store/${storeName}`);\n\t};\n\treturn (\n\t\t<>\n\t\t\t<form className=\"store-selector\" onSubmit={goToStore}>\n\t\t\t\t<h2>Please Enter A Store</h2>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={myInput}\n\t\t\t\t\trequired\n\t\t\t\t\tplaceholder=\"Store Name\"\n\t\t\t\t\tdefaultValue={getFunName()}\n\t\t\t\t/>\n\t\t\t\t<button type=\"submit\">Visit Store →</button>\n\t\t\t</form>\n\t\t</>\n\t);\n};\n\nexport default StorePicker;\n","import React from 'react';\n\nconst NotFound = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Not Found!?!!!!111</h2>\n\t\t</div>\n\t);\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport App from './App';\nimport StorePicker from './StorePicker';\nimport NotFound from './NotFound';\n\nconst Router = () => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Routes>\n\t\t\t\t<Route exact path=\"/\" element={<StorePicker />} />\n\t\t\t\t<Route exact path=\"/store/:storeId\" element={<App />} />\n\t\t\t\t<Route element={<NotFound />} />\n\t\t\t</Routes>\n\t\t</BrowserRouter>\n\t);\n};\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}